"use strict";(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[957],{106:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ generateCalendarFunc)\n});\n\n;// CONCATENATED MODULE: ./src/addLine.js\nfunction addLine(number) {\n  var tr = document.createElement('tr');\n  var removeLine = document.querySelector('.remove-line');\n  var addLineButton = document.querySelector('.add-line');\n  var addButtonContainer = addLineButton.parentElement;\n  var subjectLine = addLineButton.parentElement.parentElement;\n  var generateCalendarButton = subjectLine.querySelector('.generate-calendar');\n  var generateCalendarButtonContainer = generateCalendarButton.parentElement;\n  var calendarCreationTbody = document.querySelector('.calendar-creation-tbody');\n  tr.className = 'subject-line'; //on supprime le bouton\n\n  subjectLine.removeChild(addButtonContainer);\n  subjectLine.removeChild(generateCalendarButtonContainer);\n\n  if (removeLine !== null) {\n    removeLine.parentElement.parentElement.removeChild(removeLine.parentElement);\n  }\n\n  calendarCreationTbody.appendChild(tr);\n  tr.innerHTML = \"\\n    <td><input type='text' name='subject-\".concat(number, \"' id='subject-input'></td>\\n    <td><input type='text' name='chapter-\").concat(number, \"' id='chapter-input'></td>\\n    <td><input type='date' name='date-\").concat(number, \"' id='date-input'></td>\\n    <td><input type='time' name='hour-\").concat(number, \"' id='hour-input'></td>\\n    <td><i class='fas fa-plus add-line'></i></td>\\n    <td><i class='fas fa-check generate-calendar'></i></td>\\n    <td><i class='fas fa-window-close remove-line'></i></td>\\n    \"); //on reassigne une valeur à removeLine car une ligne vient d'être ajouté et elle pouvait être vide au début\n\n  removeLine = document.querySelector('.remove-line');\n\n  if (removeLine !== null) {\n    removeLine.addEventListener('click', function () {\n      var removeButton = removeLine.parentElement;\n      removeButton.parentElement.classList.add('invisible-subject-line');\n      removeButton.parentElement.addEventListener('animationend', function () {\n        calendarCreationTbody.removeChild(removeButton.parentElement);\n        calendarCreationTbody.lastElementChild.appendChild(addButtonContainer);\n        calendarCreationTbody.lastElementChild.appendChild(generateCalendarButtonContainer);\n\n        if (calendarCreationTbody.firstElementChild !== calendarCreationTbody.lastElementChild) {\n          calendarCreationTbody.lastElementChild.appendChild(removeButton);\n        }\n      });\n    });\n  }\n}\n// EXTERNAL MODULE: ./src/createElement.js\nvar createElement = __webpack_require__(995);\n;// CONCATENATED MODULE: ./src/generateRepetitionsCalendar.js\n\n\nfunction generateRepetitionsCalendar(nb, element) {\n  var number = nb;\n  var elementInputs = element.querySelectorAll('input');\n  var emptyInputExists = false;\n  elementInputs.forEach(function (i) {\n    if (i.value === '') {\n      emptyInputExists = true;\n    }\n  });\n\n  if (!emptyInputExists) {\n    number++;\n    addLine(number);\n    generateLines(element);\n  } else {\n    if (document.querySelector('.warning') === null) {\n      createWarning(\"Impossible de générer les répétitions si les champs sont vides.\");\n    }\n  }\n}\n/**\r\n * génère des lignes d'inputs d'une matière à reviser\r\n * @param {HTMLElement} element\r\n */\n\nfunction generateLines(element) {\n  var tbody = document.querySelector('tbody'); //lastElementChild représente le dernier element qui vient d'être ajouté\n\n  var subjectInput = tbody.lastElementChild.querySelector('#subject-input');\n  var chapterInput = tbody.lastElementChild.querySelector('#chapter-input');\n  var dateInput = tbody.lastElementChild.querySelector('#date-input');\n  var hourInput = tbody.lastElementChild.querySelector('#hour-input');\n  subjectInput.value = element.querySelector('#subject-input').value;\n  chapterInput.value = element.querySelector('#chapter-input').value;\n  var splittedHour = element.querySelector('#hour-input').value.split(':');\n  var splittedDate = element.querySelector('#date-input').value.split('-');\n  var year = splittedDate[0];\n  var month = splittedDate[1];\n  var day = splittedDate[2];\n  var newHourValue = parseInt(splittedHour[0]) + 8;\n\n  if (newHourValue < 20) {\n    dateInput.value = element.querySelector('#date-input').value;\n    hourInput.value = newHourValue + ':' + splittedHour[1];\n  } else {\n    var newDayValue = parseInt(day) + 1;\n    newHourValue = 8;\n    dateInput.value = year + '-' + month + '-' + newDayValue;\n\n    if (dateInput.value === '') {\n      if (parseInt(month) < 12) {\n        dateInput.value = year + '-' + (parseInt(month) + 1) + '-' + '01';\n      } else {\n        dateInput.value = parseInt(year) + 1 + '-' + '01' + '-' + '01';\n      }\n    }\n\n    hourInput.value = '0' + newHourValue + ':' + splittedHour[1];\n  }\n}\n/**\r\n * crée un message warnig\r\n * @param {string} message \r\n */\n\n\nfunction createWarning(message) {\n  var p = (0,createElement/* default */.Z)('p', 'warning');\n  var i = (0,createElement/* default */.Z)('i', 'fas fa-exclamation-triangle');\n  var span = (0,createElement/* default */.Z)('span', 'warnig-message');\n  document.querySelector('.content').appendChild(p);\n  p.appendChild(i);\n  p.appendChild(span);\n  span.innerHTML = message;\n}\n;// CONCATENATED MODULE: ./src/generateCalendar.js\n\nvar tbody;\nfunction generateCalendarFunc(e) {\n  tbody = document.querySelector('.calendar-creation-tbody'); //contient les tous les tr\n\n  var subjectsLines = Array.from(document.querySelectorAll('.subject-line')); // nécessaire pour différencier le \"name\" d'un input. Il sera incrémenté à chaque fois qu'il y a une nouvelle ligne\n\n  var number = subjectsLines.length; //contient les inputs dont la la revision est de type exercice\n\n  var isExercise = []; //contient les td qui contiennent les inputs\n\n  var inputsContainer = []; //contient les inputs eux-mêmes\n\n  var inputs = []; //contient tous les input de type date\n\n  var dateInputs = []; //contient tous les input qui ont la même date\n\n  var inputsWithSameDate = {}; //contient toutes les lignes(tr) qui ont la même date et heure où l'on trouvera ceux dont la date devrait être rajoutée +2\n\n  var newLineWithSameDate = {};\n  var sameDate = {}; //0 si l'utilsateur a fait une erreur de remplissage d'emploi du temps (quotas 3 leçons / j)\n\n  var isWarning = 0;\n  /**\r\n   * contient les elements à repeter\r\n   * @var toRepeat {}\r\n   */\n\n  var toRepeat = {};\n  subjectsLines.forEach(function (line) {\n    inputsContainer.push(line.querySelectorAll('input'));\n  });\n  inputsContainer.forEach(function (lineInputs) {\n    lineInputs.forEach(function (lineinput) {\n      inputs.push(lineinput);\n    });\n  });\n\n  for (var x = 0; x < inputs.length; x++) {\n    if (inputs[x].id === \"date-input\") {\n      dateInputs.push(inputs[x]);\n    }\n  }\n\n  for (var _n = 0; _n < dateInputs.length; _n++) {\n    // si l'element n + 1 du tableau existe (cad on est toujours dans le tableau)\n    if (dateInputs[_n + 1] !== undefined) {\n      //si les 2 elements qui se suivent ont les mêmes valeurs\n      if (dateInputs[_n].value === dateInputs[_n + 1].value) {\n        /*s'il n'existe pas encore aucun tableau contenant les elements avec les mêmes valeurs(date),\r\n        on le crée puis on push les elements qui se suivent. Sinon on push seulement la prochaine element\r\n        */\n        if (inputsWithSameDate[dateInputs[_n].value] === undefined) {\n          inputsWithSameDate[dateInputs[_n].value] = [];\n\n          inputsWithSameDate[dateInputs[_n].value].push(dateInputs[_n]);\n\n          inputsWithSameDate[dateInputs[_n].value].push(dateInputs[_n + 1]);\n        } else {\n          inputsWithSameDate[dateInputs[_n].value].push(dateInputs[_n + 1]);\n        }\n      } else {\n        if (inputsWithSameDate[dateInputs[_n].value] === undefined) {\n          inputsWithSameDate[dateInputs[_n].value] = [];\n\n          inputsWithSameDate[dateInputs[_n].value].push(dateInputs[_n]);\n        } else {\n          if (inputsWithSameDate[dateInputs[_n + 1].value] === undefined) {\n            inputsWithSameDate[dateInputs[_n + 1].value] = [];\n\n            inputsWithSameDate[dateInputs[_n + 1].value].push(dateInputs[_n + 1]);\n          }\n        }\n      }\n    } else {\n      if (inputsWithSameDate[dateInputs[_n].value] === undefined) {\n        inputsWithSameDate[dateInputs[_n].value] = [];\n\n        inputsWithSameDate[dateInputs[_n].value].push(dateInputs[_n]);\n      }\n    }\n  }\n\n  var n = 0;\n\n  var _loop = function _loop(date) {\n    inputsWithSameDate[date].forEach(function (input) {\n      var parent = input.parentElement.parentElement;\n      var chapterInput = parent.querySelector('#chapter-input');\n\n      if (chapterInput.value.includes(\"exercice\")) {\n        n++;\n        isExercise[date] = n;\n      } else {\n        // si le tableau n'exsite pas encore, on le crée\n        if (toRepeat[date] === undefined) {\n          toRepeat[date] = [];\n        } //dans tous les cas on push\n\n\n        toRepeat[date].push(chapterInput.parentElement.parentElement);\n      }\n    });\n  };\n\n  for (var date in inputsWithSameDate) {\n    _loop(date);\n  }\n\n  for (var d in inputsWithSameDate) {\n    if (inputsWithSameDate[d].length < 4) {\n      toRepeat[d].forEach(function (element) {\n        generateRepetitionsCalendar(number, element);\n      });\n    }\n\n    switch (inputsWithSameDate[d].length) {\n      case 4:\n        if (isExercise[d] >= 1) {\n          if (isWarning === 0) {\n            toRepeat[d].forEach(function (element) {\n              generateRepetitionsCalendar(number, element);\n            });\n          }\n        } else {\n          isWarning = 1;\n          focusOnElementsAfterWarning(toRepeat[d]);\n          createWarning(\"Erreur du quota 3 matières/j. Il faut au moins que l'une d'entre elles soient un exercice.\");\n        }\n\n        break;\n\n      case 5:\n        if (isExercise[d] >= 2) {\n          if (isWarning === 0) {\n            toRepeat[d].forEach(function (element) {\n              generateRepetitionsCalendar(number, element);\n            });\n          }\n        } else {\n          isWarning++;\n          focusOnElementsAfterWarning(toRepeat[d]);\n          createWarning(\"Erreur du quota 3 matières/j. Il faut au moins que deux d'entre elles soient un exercice.\");\n        }\n\n        break;\n    }\n  } //mise à jour de subjectLines car de nouveaux elements ont été rajoutés \n\n\n  subjectsLines = tbody.querySelectorAll('tr');\n  subjectsLines.forEach(function (line) {\n    var date = line.querySelector('#date-input').value;\n    var hour = line.querySelector('#hour-input').value;\n\n    if (sameDate[date] === undefined) {\n      sameDate[date] = [];\n    }\n\n    if (newLineWithSameDate[date + hour] === undefined) {\n      newLineWithSameDate[date + hour] = [];\n    }\n\n    newLineWithSameDate[date + hour].push(line);\n    sameDate[date].push(line);\n  }); // cas où plusieurs revisions sont dans la même heure\n\n  SpaceEveryRevisionIfTimesAreSemblables(newLineWithSameDate); // cas où l'espace entre plusieurs revisions de la même journée est  < 2h\n\n  SpaceEveryRevisionIfTimesAreSemblables(sameDate, true);\n}\n/**\r\n * focus sur les elements dont l'un ou plusieurs d'entre eux doivent être un exercice\r\n * @param {Array} toRepeatElements element tr où trouver l'element à focus\r\n */\n\nfunction focusOnElementsAfterWarning(toRepeatElements) {\n  toRepeatElements.forEach(function (el) {\n    el.querySelector('#chapter-input').classList.add('focus-for-warning');\n  });\n}\n/**\r\n * Ajuste l'heure en ajoutant 2 ou 1h de plus selon le cas s'il existe plusieurs revision à la même heure \r\n * ou l'espace entre 2 revisions fait moins de 2h\r\n * @param {{key: []}} ObjectToLoop \r\n * @param {{lastHour: number, lastHourInput: HTMLInputElement | undefined}} OptionsForUnderTwoHourSpacement \r\n */\n\n\nfunction SpaceEveryRevisionIfTimesAreSemblables(ObjectToLoop) {\n  var OptionsForUnderTwoHourSpacement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var lastHour = 0;\n  var lastHourInput;\n\n  for (var date in ObjectToLoop) {\n    var length = ObjectToLoop[date].length;\n\n    if (length > 1) {\n      for (var i = 0; i < length; i++) {\n        var hour = ObjectToLoop[date][i].querySelector('#hour-input');\n        var arrayFromHour = hour.value.split(':');\n        var hourValue = parseInt(arrayFromHour[0]);\n\n        if (!OptionsForUnderTwoHourSpacement) {\n          if (i >= Math.floor(length / 2)) {\n            AddNewHourValue({\n              hourValue: hourValue,\n              valueToAdd: 2\n            }, hour, arrayFromHour[1]);\n          }\n        } else {\n          console.log(ObjectToLoop);\n\n          if (lastHour > 0) {\n            console.log(hourValue + '---' + lastHour);\n\n            if (hourValue > lastHour) {\n              if (hourValue - lastHour < 2 && hourValue - lastHour > 0) {\n                AddNewHourValue({\n                  hourValue: hourValue,\n                  valueToAdd: 1\n                }, hour, arrayFromHour[1]);\n              }\n            } else if (lastHour > hourValue) {\n              if (lastHour - hourValue < 2 && lastHour - hourValue > 0) {\n                console.log('under 2h 2');\n                AddNewHourValue({\n                  hourValue: lastHour,\n                  valueToAdd: 1\n                }, lastHourInput, arrayFromHour[1]);\n              }\n            }\n          }\n\n          lastHour = hourValue;\n          lastHourInput = hour;\n        }\n      }\n    }\n  }\n}\n/**\r\n * Rajoute la nouvelle valeur de l'heure de revision pour chaqun suivant la fonction SpaceEveryRevisionIfTimesAreSemblables\r\n * @param {{hourValue: number, valueToAdd: number}} hourProperties \r\n * @param {HTMLInputElement} hourInput \r\n * @param {number} minutes \r\n */\n\n\nfunction AddNewHourValue(hourProperties, hourInput, minutes) {\n  var newHour = hourProperties.hourValue + hourProperties.valueToAdd;\n  console.log(hourInput);\n  hourInput.value = newHour + ':' + minutes;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///106\n")}}]);